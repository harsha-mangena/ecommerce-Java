version: '3.8'

services:
  # Database
  mysql:
    image: mysql:8.0
    container_name: ecommerce-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=ecommerce
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ecommerce-network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - ecommerce-network

  # Microservices
  service-registry:
    build:
      context: ./service-registry
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - ecommerce-network
    depends_on:
      - mysql

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - ecommerce-network
    depends_on:
      - service-registry
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    ports:
      - "8081:8081"
    networks:
      - ecommerce-network
    depends_on:
      - mysql
      - service-registry
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/auth_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8082:8082"
    networks:
      - ecommerce-network
    depends_on:
      - mysql
      - service-registry
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/user_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  product-service:
    build:
      context: ./product-service
    container_name: product-service
    ports:
      - "8083:8083"
    networks:
      - ecommerce-network
    depends_on:
      - mysql
      - service-registry
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/product_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    ports:
      - "8084:8084"
    networks:
      - ecommerce-network
    depends_on:
      - mysql
      - service-registry
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/order_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    ports:
      - "8085:8085"
    networks:
      - ecommerce-network
    depends_on:
      - mysql
      - service-registry
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/inventory_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "8086:8086"
    networks:
      - ecommerce-network
    depends_on:
      - mysql
      - service-registry
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/payment_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "8087:8087"
    networks:
      - ecommerce-network
    depends_on:
      - mysql
      - service-registry
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/notification_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mysql-data:
